{"version":3,"sources":["components/Navbar.js","components/TodoForm.js","components/Todo.js","components/EditTodo.js","components/TodoWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","_jsx","children","className","TodoForm","_ref","addTodo","value","setValue","useState","_jsxs","onSubmit","e","preventDefault","type","placeholder","onChange","target","Todo","task","toggleComplete","deleteTodo","editTodo","onClick","id","concat","completed","FontAwesomeIcon","icon","faPenToSquare","faTrash","EditTodo","priority","setPriority","TodoWrapper","todos","setTodos","savedTodos","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","map","todo","filter","isEditing","editTask","uuidv4","App","_Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.471e3a8e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"header\">Your Personalized Todo List</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\n\r\nexport const TodoForm = ({ addTodo }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (value) {\r\n      addTodo(value);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form className=\"TodoForm\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"TodoInput\"\r\n        value={value}\r\n        placeholder=\"Today's Task?\"\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n        }}\r\n      />\r\n      <button type=\"submit\" className=\"Todo-btn\">\r\n        Add task\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faPenToSquare } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const Todo = ({ task, toggleComplete, deleteTodo, editTodo }) => {\r\n  return (\r\n    <div className=\"Todo\">\r\n      <p\r\n        onClick={() => toggleComplete(task.id)}\r\n        className={`${task.completed ? \"completed\" : \"\"}`}\r\n      >\r\n        {task.task}\r\n      </p>\r\n      <div>\r\n        <FontAwesomeIcon\r\n          icon={faPenToSquare}\r\n          onClick={() => editTodo(task.id)}\r\n        />\r\n        <FontAwesomeIcon icon={faTrash} onClick={() => deleteTodo(task.id)} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport const EditTodo = ({ editTodo, task }) => {\r\n  const [value, setValue] = useState(task.task);\r\n  const [priority, setPriority] = useState(\"low\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    editTodo(value, task.id, priority);\r\n  };\r\n  return (\r\n    <form className=\"TodoForm\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        value={value}\r\n        placeholder=\"update Task\"\r\n        onChange={(e) => {\r\n          setValue(e.target.value);\r\n        }}\r\n      />\r\n      <button type=\"submit\" className=\"Todo-btn\">\r\n        Add Task\r\n      </button>\r\n\r\n      <select\r\n        className=\"dropdown\"\r\n        value={priority}\r\n        onChange={(e) => setPriority(e.target.value)}\r\n      >\r\n        <option value=\"low\" className=\"low\">\r\n          Low\r\n        </option>\r\n        <option value=\"medium\" className=\"medium\">\r\n          Medium\r\n        </option>\r\n        <option value=\"high\" className=\"high\">\r\n          High\r\n        </option>\r\n      </select>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditTodo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TodoForm from \"./TodoForm\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Todo } from \"./Todo\";\r\nimport { EditTodo } from \"./EditTodo\";\r\n\r\nexport const TodoWrapper = () => {\r\n  const [todos, setTodos] = useState(() => {\r\n    const savedTodos = localStorage.getItem(\"todos\");\r\n    if (savedTodos) {\r\n      return JSON.parse(savedTodos);\r\n    } else {\r\n      return [];\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const addTodo = (todo) => {\r\n    setTodos([\r\n      ...todos,\r\n      { id: uuidv4(), task: todo, completed: false, isEditing: false },\r\n    ]);\r\n  };\r\n\r\n  const toggleComplete = (id) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const editTodo = (id) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, isEditing: !todo.isEditing } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  const editTask = (task, id) => {\r\n    setTodos(\r\n      todos.map((todo) =>\r\n        todo.id === id ? { ...todo, task, isEditing: !todo.isEditing } : todo\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"TodoWrapper \">\r\n      <h1>Task Ticker</h1>\r\n      <TodoForm addTodo={addTodo} />\r\n      {todos.map((todo) =>\r\n        todo.isEditing ? (\r\n          <EditTodo key={todo.id} editTodo={editTask} task={todo} />\r\n        ) : (\r\n          <Todo\r\n            task={todo}\r\n            key={todo.id}\r\n            toggleComplete={toggleComplete}\r\n            deleteTodo={deleteTodo}\r\n            editTodo={editTodo}\r\n          />\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoWrapper;\r\n","import \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport TodoWrapper from \"./components/TodoWrapper\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>\r\n        <TodoWrapper />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n// import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}